# -*- coding: utf-8 -*-
"""HR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ECFEIYCaqlD0qnQXxL7qWHJ3cSJJEazS
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

df=pd.read_csv("/content/HR-Employee-Attrition.csv")
df
df.shape
df.info()

df.dropna(inplace=True)
df.shape
df.drop_duplicates(inplace=True)
df.shape
df.head()

df.columns

df['EmployeeCount'].value_counts()

df.columns
df1=df.drop(['DailyRate','JobLevel','StockOptionLevel','RelationshipSatisfaction','EnvironmentSatisfaction', 'Over18','StandardHours','YearsSinceLastPromotion','YearsWithCurrManager','EmployeeCount','TrainingTimesLastYear','Education'],axis=1)
df1

df1.columns

df1.rename(columns={'JobInvolvement':'JobInvolvementRating','JobSatisfaction':'JobSatisfactionRating','WorkLifeBalance':'WorkLifeBalanceRating'},inplace=True)

def valuechange(value):
   return float(value)
df1['WorkLifeBalanceRating']=df1['WorkLifeBalanceRating'].apply(valuechange)
df1['WorkLifeBalanceRating']

def rating(values):
  return float(values)
df1['JobInvolvementRating']=df1['JobInvolvementRating'].apply(rating)
df1['JobInvolvementRating']

def rating1(value):
  return float(value)
df1['JobSatisfactionRating']=df1['JobSatisfactionRating'].apply(rating1)
df1['JobSatisfactionRating']

df1.columns

sns.countplot(x="Attrition",data=df1)

df3=df1[df1['Attrition']=='No']
df3

sns.countplot(x='Department',data=df3)

sns.countplot(x='Department',hue='Gender',data=df3)

#job role
sns.countplot(x='JobRole',data=df3)
plt.xticks(rotation=90)

sns.countplot(x='MaritalStatus',data=df3)

sns.set_style('whitegrid')
sns.boxplot(x='BusinessTravel',y='Age',data=df3,palette='rainbow')

#performance rating
df1.columns
sns.countplot(x='PerformanceRating',hue='Gender',data=df3)

#education qualification
sns.countplot(x='EducationField',data=df3,palette='rainbow')
plt.xticks(rotation=90)

#barplot
plt.figure(figsize=(8,9))
sns.barplot(y='Age',hue="Gender",x='BusinessTravel',data=df3)
plt.legend(loc='upper right')

sns.barplot(x= 'PerformanceRating',y='PercentSalaryHike', data=df3,palette="rocket")

df4=df3.select_dtypes(include='int64')
df4.info()
df5=df4.corr()
df6=df5.unstack().sort_values(ascending=False)#to find the highest correlation value
df6

plt.figure(figsize=(12,12))
sns.heatmap(df5,annot=True)